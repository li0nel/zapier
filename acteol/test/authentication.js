/* global describe, it, before */
require('should');
const zapier = require('zapier-platform-core');
const App = require('../index');
const appTester = zapier.createAppTester(App);
const nock = require('nock');

const sample_token = require('../samples/token.js');
const sample_locations = require('../samples/locations.js');

const mockBaseURL = 'example.com';

describe('oauth2 app', () => {
  it('should get an OAuth token', () => {
    const scope = nock(/example\.com/)
      .post('/token')
      .reply(200, sample_token);
      
    const bundle = {
      // In production, these will be generated by Zapier and set automatically
      inputData: {
        username: 'dummy',
        password: 'dummy'
      },
      authData: {
        atreemoURL: mockBaseURL
      }
    };

    return appTester(App.authentication.sessionConfig.perform, bundle).then(
      token => {
        token.should.have.ownProperty('access_token')
      }
    );
  });

  it('should test auth', () => {
    const scope = nock(/example\.com/)
      .get('/api/Location/Get')
      .reply(200, sample_locations);
      
    const bundle = {
      // In production, these will be generated by Zapier and set automatically
      inputData: {
        username: 'dummy',
        password: 'dummy'
      },
      authData: {
        atreemoURL: mockBaseURL
      }
    };

    return appTester(App.authentication.test, bundle).then(
      locations => {
        locations.should.have.ownProperty('Locations')
      }
    );
  });
});
